"Based on "A Good Vimrc" from https://dougblack.io/words/a-good-vimrc.html

syntax enable "enable syntax processing

colorscheme aperture "set colorscheme

set encoding=utf-8 "set encoding as UTF-8
set fileencoding=utf-8 "save files as UTF-8

set tabstop=4 "number of visual spaces per TAB
set softtabstop=4 "number of spaces in tab when editing
set shiftwidth=4 "auto indenting is 4 spaces

set mouse=a

filetype indent on "load filetype-specific indent files
set number "show line numbers
set showcmd "show command in bottom bar
set cursorline "hilight current line
set wildmenu "visual autocomplete for command menu like zsh
set lazyredraw "redraw only when we need to
set showmatch "hilight matching [{()}]

set incsearch "search as characters are entered
set hlsearch "highlight matches

set foldenable "enable folding
set foldlevelstart=10 "open most folds by default
set foldnestmax=10 "10 nested fold max
set foldmethod=indent "fold based on indent level
set colorcolumn=80 "hilight column at 80 characters

"Fix "alt" binding character
for i in range(97,122)
  let c = nr2char(i)
  exec "map \e".c." <M-".c.">"
  exec "map! \e".c." <M-".c.">"
endfor

"space open/closes folds
nnoremap <space> za

"move vertically by visual line
nnoremap j gj
nnoremap k gk

"navigate faster with alt + (j | k)
nnoremap <M-k> 5gk
nnoremap <M-j> 5gj

"highlight last inserted text
nnoremap gV `[v`]

let mapleader="," "leader is comma

"jk is escape
inoremap jk <esc>
inoremap Jk <esc>
inoremap jK <esc>
inoremap JK <esc>

"turn off search highlight
nnoremap <leader>h :nohlsearch<CR>

"toggle hilighting on and off
nnoremap <leader>H :set cursorline!<CR>

"edit vimrc/zshrc and load vimrc bindings
nnoremap <leader>ev :vsp $MYVIMRC<CR>
nnoremap <leader>ez :vsp ~/.zshrc<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>

"save session
nnoremap <leader>s :mksession<CR>

"open program in hex
" command Hexedit %!xxd

"split window shortcuts
noremap <C-J> <C-W>w
noremap <C-K> <C-W>W
noremap <C-L> <C-W>l
noremap <C-H> <C-W>h

if has("autocmd")
	au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
endif

"=====Vim-Plug=====
call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdcommenter' "allows for easy commenting with <leader> cc, etc.
Plug 'sheerun/vim-polyglot' "enhanced syntax highlighting for various languages
Plug 'vim-syntastic/syntastic' "enhanced syntax checking for various languages
 
call plug#end()

"+++++Nerdcommenter+++++
"comments out whole lines in visual mode
let NERDCommentWholeLinesInVMode = 1

"removes spaces around comment delimiters when uncommenting
"let NERDRemoveExtraSpace = 1

"add space after comment delimiters by default
let g:NERDSpaceDelims = 1

"align line-wise comment delimiters flush left instead of indenting
let g:NERDDefaultAlign = 'start'

"Set C to use alternate delimieters (//) vs (/* */)
let g:NERDAltDelims_c = 1
"-----Nerdcommenter-----

"+++++VimC/CPPEnhancedHilight+++++

"highlights class scope
let g:cpp_class_scope_highlight = 1

"highlights member variables
let g:cpp_member_variable_hilight = 1

"hilights template functions
let g:cpp_experimental_simple_template_highlight = 1

"faster than previous but doesn't work in all cases
" let g:cpp_experimental_template_hilight = 1

"hilight of library concepts like keywords 'concept' and 'requires' as well as named requirements 
let g:cpp_concepts_hilight = 1

"-----VimC/CPPEnhancedHilight-----
"=====Vim-Plug=====
